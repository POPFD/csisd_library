/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LibraryGUI.java
 *
 * Created on 28-Sep-2009, 11:55:39
 */

package library;
import javax.swing.JOptionPane;

/**
 *
 * @author Kutoma
 */
public class LibraryGUI extends javax.swing.JFrame {
    
    private SetOfMembers theMembers = new SetOfMembers();
    private SetOfBooks holdings = new SetOfBooks();
       
    /* Table Model that will hold all our books */
    private BookTableModel bookTableModel = new BookTableModel();
    
    /** Creates new form LibraryGUI */
    public LibraryGUI() {

        initComponents();
        
        Member member1 = new Member("Jane");
        Member member2 = new Member("Amir");
        Member member3 = new Member("Astrid");
        Member member4 = new Member("Andy");

        theMembers.addMember(member1);
        theMembers.addMember(member2);
        theMembers.addMember(member3);
        theMembers.addMember(member4);

        Book book1 = new Book("book1", "author1", "978-3-16-148410-0");
        Book book2 = new Book("book2", "author1", "978-3-16-148411-0");
        Book book3 = new Book("book3", "author2", "978-3-16-148412-0");
        Book book4 = new Book("book4", "author2", "978-3-16-148413-0");
        Book book5 = new Book("book5", "author3", "978-3-16-148414-0");

        holdings.addBook(book1);
        holdings.addBook(book2);
        holdings.addBook(book3);
        holdings.addBook(book4);
        holdings.addBook(book5);

        memberList.setListData(theMembers.toArray());
        
        /* This method loads ALL the books in the library into our GUI table */
        bookTableModel.updateBookSet(holdings);
    }
    
    private void approveLoan(Book book, Member member)
    {
        if (member.getBooksOnLoan().size() < 3)
        {
            member.borrowBook(book);
            bookTableModel.updateBookSet(holdings);
        }
        else
            JOptionPane.showMessageDialog(null, "User already has 3 books on loan", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        loanBook = new javax.swing.JButton();
        returnBook = new javax.swing.JButton();
        listMemberBooks = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        listAllBooks = new javax.swing.JButton();
        listLoanedBooks = new javax.swing.JButton();
        listAvailableBooks = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        addBook = new javax.swing.JButton();
        addMember = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        memberList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        memberList.setName(""); // NOI18N
        jScrollPane1.setViewportView(memberList);

        loanBook.setText("Loan Book");
        loanBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loanBookActionPerformed(evt);
            }
        });

        returnBook.setText("Return Book");
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });

        listMemberBooks.setLabel("List Member Books");
        listMemberBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listMemberBooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listMemberBooks, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
            .addComponent(returnBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(loanBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(loanBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(returnBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listMemberBooks))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Members");

        jLabel2.setText("All Books In Library");

        bookTable.setModel(bookTableModel);
        bookTable.setColumnSelectionAllowed(true);
        bookTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bookTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(bookTable);
        bookTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        listAllBooks.setText("List All Books");
        listAllBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllBooksActionPerformed(evt);
            }
        });

        listLoanedBooks.setText("List Loaned Books");
        listLoanedBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listLoanedBooksActionPerformed(evt);
            }
        });

        listAvailableBooks.setText("List Available Books");
        listAvailableBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAvailableBooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(listAllBooks, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listAvailableBooks, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(listLoanedBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(listAllBooks)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listLoanedBooks)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listAvailableBooks)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        addBook.setText("Add Book");

        addMember.setText("Add Member");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addMember, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(addBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addMember)
                .addGap(0, 48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(77, 77, 77))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.getAccessibleContext().setAccessibleName("Books");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listAllBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllBooksActionPerformed
        bookTableModel.updateBookSet(holdings);
    }//GEN-LAST:event_listAllBooksActionPerformed

    private void listLoanedBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listLoanedBooksActionPerformed
        SetOfBooks loanedBooks = new SetOfBooks();
        
        for (Book tmp : holdings)
        {
            if (tmp.isOnLoan() == true)
                loanedBooks.add(tmp);
        }
        
        bookTableModel.updateBookSet(loanedBooks);
    }//GEN-LAST:event_listLoanedBooksActionPerformed

    private void listAvailableBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAvailableBooksActionPerformed
        SetOfBooks availableBooks = new SetOfBooks();
        
        for (Book tmp : holdings)
        {
            if (tmp.isOnLoan() == false)
                availableBooks.add(tmp);
        }
        
        bookTableModel.updateBookSet(availableBooks);
    }//GEN-LAST:event_listAvailableBooksActionPerformed

    private void listMemberBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listMemberBooksActionPerformed
        Member selectedMember = (Member)memberList.getSelectedValue();
        
        if (selectedMember != null)
            bookTableModel.updateBookSet(selectedMember.getBooksOnLoan());
        else
            JOptionPane.showMessageDialog(null, "No member selected", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_listMemberBooksActionPerformed

    private void loanBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loanBookActionPerformed

        Book selectedBook = null;
        /* Get the selected Book from table (object stored in column 0) */ 
        if (bookTable.getSelectedRow() != -1)
            selectedBook = (Book)bookTable.getValueAt(bookTable.getSelectedRow(), 0);
        
        if (selectedBook != null)
        {
            Member selectedMember = (Member)memberList.getSelectedValue();
            if (selectedMember != null)
            {
                /* If we have got here now system tries to approve loan */
                approveLoan(selectedBook, selectedMember);
            }
            else
                JOptionPane.showMessageDialog(null, "No member selected", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Book not selected", "Error", JOptionPane.ERROR_MESSAGE);     
    }//GEN-LAST:event_loanBookActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        Book selectedBook = null;
        /* Get the selected Book from table (object stored in column 0) */ 
        if (bookTable.getSelectedRow() != -1)
            selectedBook = (Book)bookTable.getValueAt(bookTable.getSelectedRow(), 0);
        
        if (selectedBook != null)
        {
            if (selectedBook.isOnLoan() == true)
            {
                Member currentBorrower = selectedBook.getBorrower();
                
                /* Return the selected book and update table */
                currentBorrower.returnBook(selectedBook);
                bookTableModel.updateBookSet(holdings);
            }
            else
                JOptionPane.showMessageDialog(null, "Book is not on loan", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Book not selected", "Error", JOptionPane.ERROR_MESSAGE);  
    }//GEN-LAST:event_returnBookActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                new LibraryGUI().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBook;
    private javax.swing.JButton addMember;
    private javax.swing.JTable bookTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton listAllBooks;
    private javax.swing.JButton listAvailableBooks;
    private javax.swing.JButton listLoanedBooks;
    private javax.swing.JButton listMemberBooks;
    private javax.swing.JButton loanBook;
    private javax.swing.JList memberList;
    private javax.swing.JButton returnBook;
    // End of variables declaration//GEN-END:variables


}
